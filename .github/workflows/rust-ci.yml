name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: never
  RUST_BACKTRACE: 1

jobs:
  native:
  
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        features: ["", "--features rayon"]
        rust: [stable, beta, nightly]
        os: [ubuntu-latest, macos-latest, windows-latest]
        # TODO: test on other windows toolchains?
    
    steps:
    - uses: actions/checkout@v2
    - name: Get Manifest Lock
      run: cargo update
    - name: Set up a Rust toolchain
      uses: hecrj/setup-rust-action@v1.3.4
      with:
        rust-version: ${{ matrix.rust }}
    - name: Cache Cargo Registries
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#       https://github.com/rust-lang/rust/issues/84252
#     - name: Cache Build Artifacts
#       uses: actions/cache@v2
#       with:
#         path: target
#         key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}-build-artifacts
    - name: Build
      run: cargo +${{matrix.rust}} build --verbose --no-default-features ${{ matrix.features }}
    - name: Run tests
      run: cargo +${{ matrix.rust}} test --verbose --no-default-features ${{ matrix.features }}
  wasm:
  
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: true
      matrix:
        features: ["--features wasm-bindgen", "--features wasm-bindgen,serde,serde_json", "--features wasm-bindgen,wee_alloc", "--features wasm-bindgen,wee_alloc,serde,serde_json"]
        rust: [stable, beta, nightly]
    
    steps:
    - uses: actions/checkout@v2
    - name: Get Manifest Lock
      run: cargo update
    - name: Set up a Rust toolchain
      uses: hecrj/setup-rust-action@v1.3.4
      with:
        rust-version: ${{ matrix.rust }}
        targets: wasm32-unknown-unknown
    - name: Cache Cargo Registries
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#       https://github.com/rust-lang/rust/issues/84252
#     - name: Cache Build Artifacts
#       uses: actions/cache@v2
#       with:
#         path: target
#         key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}-build-artifacts-target-wasm32-unknown-unknown
    - name: Build
      run: cargo +${{matrix.rust}} build --verbose --no-default-features ${{ matrix.features }} --target wasm32-unknown-unknown
    # TODO: test with wasm-pack
  docs:

    runs-on: ubuntu-latest
    needs: [native, wasm] # make sure everything works before trying to update the documentation

    steps:
    - uses: actions/checkout@v2
    - name: Get Manifest Lock
      run: cargo update
    - name: Cache Cargo Registry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#       https://github.com/rust-lang/rust/issues/84252
#     - name: Cache Generated Files
#       uses: actions/cache@v2
#       with:
#         path: target
#         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-build-artifacts-docs
    - name: Generate Documentation
      run: cargo doc --verbose --all-features
    - name: Inject Index Meta-Link
      run: echo '<meta http-equiv=refresh content=0;url=image_go_nord/index.html>' > target/doc/index.html
    - name: Deploy to GitHub Pages
      if: ${{ github.event_name != 'pull_request' }}
      uses: JamesIves/github-pages-deploy-action@4.1.1
      with:
        branch: gh-pages
        folder: target/doc

  
